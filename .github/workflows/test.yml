name: Test

on:
  push:
    branches:
      - main
    paths:
      - "pytidb/**"
      - "tests/**"
      - "pyproject.toml"
      - "uv.lock"
  pull_request:
    branches:
      - main
    paths:
      - "pytidb/**"
      - "tests/**"
      - "pyproject.toml"
      - "uv.lock"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-format:
    name: Lint and Format
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install dependencies
        run: make install_dev
      - name: Run Lint
        run: make lint
      - name: Check Format
        run: uv tool run ruff format --check

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TIDB_HOST: ${{ secrets.TIDB_HOST }}
      TIDB_PORT: 4000
      TIDB_USERNAME: ${{ secrets.TIDB_USERNAME }}
      TIDB_PASSWORD: ${{ secrets.TIDB_PASSWORD }}
      TIDB_DATABASE: test
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      JINA_AI_API_KEY: ${{ secrets.JINA_AI_API_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install dependencies
        run: make install_dev
      - name: Run Test
        run: make test
